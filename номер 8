using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace num 8
{
    internal class Program
    {
        static void Main(string[] args)
        {
            var root = new Folder("Корневая папка");

            var documents = new Folder("Документы");
            var photos = new Folder("Фото");
            var music = new Folder("Музыка");

            documents.Add(new File("Резюме.txt"));
            documents.Add(new File("Договор.docx"));

            photos.Add(new File("Отпуск.jpg"));
            photos.Add(new File("День рождения.png"));

            music.Add(new File("Любимая песня.mp3"));

            var nature = new Folder("Природа");
            nature.Add(new File("Горы.jpg"));
            nature.Add(new File("Озеро.jpg"));
            photos.Add(nature);

            root.Add(documents);
            root.Add(photos);
            root.Add(music);

            Console.WriteLine("Структура файловой системы:");
            root.Display();
        }
    }
    public abstract class FileSystemItem
    {
        public string Name { get; }

        protected FileSystemItem(string name)
        {
            Name = name ?? throw new ArgumentNullException(nameof(name));
        }

        public abstract void Display(int depth = 0);

        protected string GetIndent(int depth)
        {
            return new string(' ', depth * 4);
        }
    }

    public class File : FileSystemItem
    {
        public File(string name) : base(name) { }

        public override void Display(int depth = 0)
        {
            Console.WriteLine($"{GetIndent(depth)} {Name}");
        }
    }

    public class Folder : FileSystemItem
    {
        private readonly List<FileSystemItem> _children = new List<FileSystemItem>();

        public Folder(string name) : base(name) { }

        public void Add(FileSystemItem item)
        {
            _children.Add(item ?? throw new ArgumentNullException(nameof(item)));
        }

        public void Remove(FileSystemItem item)
        {
            _children.Remove(item);
        }

        public override void Display(int depth = 0)
        {
            Console.WriteLine($"{GetIndent(depth)} {Name}");

            foreach (var child in _children)
            {
                child.Display(depth + 1);
            }
        }
    }

}
